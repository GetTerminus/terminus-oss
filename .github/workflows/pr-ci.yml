name: "PR CI"
on: pull_request
env:
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  FONTAWESOME_NPM_AUTH_TOKEN: "${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}"
  CHROMATIC_PROJECT_TOKEN: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  #
  # Cancel any workflows that would be duplicated by this run
  #
  cancel_duplicate_runs:
    name: "Cancel Duplicates"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: echo ${GITHUB_TOKEN:0:10}

  list_test_lint_build:
    name: "List - Test - Lint - Build"
    needs: [cancel_duplicate_runs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: git fetch --no-tags --prune --depth=50 origin +refs/heads/release:refs/remotes/origin/release
      - name: "Set SHOULD_RUN flag"
        run: |
          if [[ "${{github.event.head_commit.message}}" =~ (skip\ ci|ci\ skip) ]]; then
            echo "SHOULD_RUN=false" >> $GITHUB_ENV
          else
            echo "SHOULD_RUN=true" >> $GITHUB_ENV
          fi
      - name: "Set up Node"
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
        if: env.SHOULD_RUN == 'true'
      - name: "Restore workspace cache"
        uses: actions/cache@v2
        id: workspace-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-workspace-001-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-workspace-001-
      - name: "Install Dependencies"
        run: yarn install --frozen-lockfile --non-interactive
        if: env.SHOULD_RUN == 'true'

      #
      # List affected
      #
      - name: "List affected LIBS"
        run: yarn affected:libs --base=origin/release --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Test affected
      #
      - name: "Test affected projects"
        run: yarn nx affected:test --base=origin/release --head=HEAD
        if: env.SHOULD_RUN == 'true'
      - name: "Build styles before regression testing"
        run: yarn nx build ui-styles --prod --skip-nx-cache
        if: env.SHOULD_RUN == 'true'
      - name: "Regression test on affected projects"
        run: tools/ci/run-chromatic-with-changed-projects.sh ${GITHUB_REF#refs/*/}
        env:
          CHROMATIC_BRANCH: ${{ github.event.pull_request.head.ref }}
          CHROMATIC_SHA: ${{ github.event.pull_request.head.sha }}
        if: env.SHOULD_RUN == 'true'
      - name: "Determine if Storybook log was generated"
        id: check_files
        uses: andstor/file-existence-action@v1.0.1
        with:
          files: "/home/runner/work/terminus-oss/terminus-oss/build-storybook.log"
      - name: "Upload Storybook Log (if exists)"
        uses: actions/upload-artifact@v2
        with:
          name: storybook-log
          path: /home/runner/work/terminus-oss/terminus-oss/build-storybook.log
        if: steps.check_files.outputs.files_exists == 'true'

      #
      # Lint affected
      #
      - name: "Lint files"
        run: yarn nx affected:lint --base=origin/release --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Build affected
      #
      - name: "Build affected projects"
        run: yarn nx affected:build --prod --withDeps --base=origin/release --head=HEAD
        if: env.SHOULD_RUN == 'true'
      - name: "Build affected projects schematics"
        run: yarn affected:build-schematics --base=origin/release --head=HEAD
        if: env.SHOULD_RUN == 'true'

      #
      # Upload coverage reports
      #
      - name: "Upload coverage results to CodeCov"
        run: tools/ci/coverage-upload.sh
        if: env.SHOULD_RUN == 'true'
