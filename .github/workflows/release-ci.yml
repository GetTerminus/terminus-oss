name: Release CI
on:
  push:
    branches:
      - 'master'
      - 'v[0-9]+.[0-9]+.[0-9]+'

# 1) build library
# 2) test library
# 3) lint all files
# 4) build demos
# 5) publish library
# 6) generate docs
# 7) deploy docs
# 8) deploy demos
jobs:
  #
  # Build affected projects
  #
  affected_build:
    name: Compile affected projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: |
          git fetch --no-tags --prune --depth=5 origin master
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn
        id: cache_yarn
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Cache NODE
        id: cache_node
        uses: actions/cache@v2
        env:
          cache-name: cache-node
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - if: steps.cache_node.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Build affected projects
        run: yarn nx affected:build --prod --base=origin/master --head=${{ github.event.pull_request.head.ref }}
      - name: Cache NX Cache
        id: cache_nnx
        uses: actions/cache@v2
        env:
          cache-name: cache-nx
        with:
          path: node_modules/.cache/nx
          key: ${{ runner.os }}-nx-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nx-${{ env.cache-name }}-
            ${{ runner.os }}-nx-
            ${{ runner.os }}-
      - name: Upload built files
        uses: actions/upload-artifact@v2
        with:
          name: built-libs
          path: dist/*

  #
  # Test affected projects
  #
  affected_test:
    name: Test affected projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: |
          git fetch --no-tags --prune --depth=5 origin master
      - name: Check last commit message
        id: skip
        uses: atlwendy/retrieve-commit-messages-from-pr@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn
        id: cache_yarn
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Cache NODE
        id: cache_node
        uses: actions/cache@v2
        env:
          cache-name: cache-node
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - if: steps.cache_node.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Test affected projects
        run: yarn nx affected:test --base=origin/master --head=${{ github.event.pull_request.head.ref }} --codeCoverage
      - name: Upload coverage results to CodeCov
        run: tools/ci/coverage-upload.sh
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage/*

  #
  # Lint affected projects
  #
  affected_lint:
    name: Lint affected projects
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - run: |
          git fetch --no-tags --prune --depth=5 origin master
      - name: Check last commit message
        id: skip
        uses: atlwendy/retrieve-commit-messages-from-pr@v2
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn
        id: cache_yarn
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-name }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-
      - name: Cache NODE
        id: cache_node
        uses: actions/cache@v2
        env:
          cache-name: cache-node
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - if: steps.cache_node.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --non-interactive
      - name: Lint files
        run: yarn nx affected:lint --base=origin/master --head=${{ github.event.pull_request.head.ref }}

  #
  # Release affected packages
  #
#  affected_release:
#    name: Release affected packages
#    needs: [affected_build, affected_test, affected_lint]
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          ref: ${{ github.event.pull_request.head.ref }}
#          fetch-depth: 0
#      - run: |
#          git fetch --no-tags --prune --depth=5 origin master
#      - name: Check last commit message
#        id: skip
#        uses: atlwendy/retrieve-commit-messages-from-pr@v2
#      - name: Set SHOULD_RUN flag
#        run: echo ::set-env name=SHOULD_RUN::${{ steps.skip.outputs.shouldRun }}
#      - name: Set up Node
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12.x
#        if: env.SHOULD_RUN == 'true'
#      - name: Get yarn cache directory path
#        id: yarn-cache-dir-path
#        run: echo "::set-output name=dir::$(yarn cache dir)"
#      - name: Cache Yarn
#        id: cache_yarn
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-yarn
#        with:
#          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#          key: ${{ runner.os }}-yarn-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-yarn-${{ env.cache-name }}-
#            ${{ runner.os }}-yarn-
#            ${{ runner.os }}-
#        if: env.SHOULD_RUN == 'true'
#      - name: Cache NODE
#        id: cache_node
#        uses: actions/cache@v2
#        env:
#          cache-name: cache-node
#        with:
#          path: |
#            **/node_modules
#          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-node-${{ env.cache-name }}-
#            ${{ runner.os }}-node-
#            ${{ runner.os }}-
#        if: env.SHOULD_RUN == 'true'
#      - if: env.SHOULD_RUN == 'true' && steps.cache_node.outputs.cache-hit != 'true'
#        run: yarn install --frozen-lockfile --non-interactive




