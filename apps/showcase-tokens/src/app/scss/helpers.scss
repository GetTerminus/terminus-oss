
/**
 * Return the opposite direction of each direction in a list
 *
 * @param $directions
 *  List of initial directions
 * @example
 *  opposite-direction(top);
 *  opposite-direction(left, bottom);
 */
@function opposite-direction($directions) {
  $opposite-directions: ();
  $direction-map: (
          'top': 'bottom',
          'right': 'left',
          'bottom': 'top',
          'left': 'right',
          'center': 'center',
          'ltr': 'rtl',
          'rtl': 'ltr'
  );

  @each $direction in $directions {
    $direction: to-lower-case($direction);

    @if map-has-key($direction-map, $direction) {
      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
    } @else {
      @error 'No opposite direction can be found for `#{$direction}`. Direction omitted.';
    }
  }

  @return $opposite-directions;
}


/**
 * Create a triangle shape using CSS
 *
 * @mixin triangle
 * @section Style Helpers
 * @param $direction
 *  Triangle direction, either `top`, `right`, `bottom` or `left`.
 * @param $color
 *  Triangle color. Default: currentcolor
 * @param $size
 *  Triangle size. Default: 1em
 * @example
 *  @include triangle(top);
 *  @include triangle(left, red, 2em);
 */
@mixin triangle($direction, $color: currentcolor, $size: 1em) {
  $perpendicular-borders: $size solid transparent;
  content: '';
  height: 0;
  position: absolute;
  width: 0;
  z-index: 1;

  @if not index(top right bottom left, $direction) {
    @error 'Direction must be either `top`, `right`, `bottom` or `left`.';
  }

  @if $direction == top or $direction == bottom {
    border-left: $perpendicular-borders;
    border-right: $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top: $perpendicular-borders;
  }

  @if $direction == top {
    bottom: 100%;
  }

  @if $direction == bottom {
    top: 100%;
  }

  border-#{opposite-direction($direction)}: ($size * 1.5) solid $color;
}



/**
 * Reset button styles
 *
 * @example
 *  @include button-base;
 */
@mixin button-base {
  background-color: transparent;
  border: 0;
  cursor: pointer;
  outline: 0;
  text-align: center;

  &:focus {
    outline: 0;
  }
}
