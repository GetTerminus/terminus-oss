@import '~@terminus/ui-styles/helpers';
@import '../../../../../ui/styles/src/lib/style-helpers/controls/menu';

:root {
  --ts-menu-typography: var(--ts-typography-compound-body);
  --ts-menu-trigger-color: var(--ts-color-primary-500);
  --ts-menu-trigger-hover-color: var(--ts-color-primary-700);
  --ts-menu-trigger-backgroundColor: var(--ts-color-base-white);
  --ts-menu-trigger-icon-width: 12px;
  --ts-menu-trigger-icon-margin: 0 8px;
  --ts-menu-secondary-borderColor: var(--ts-color-utility-400);
  --ts-menu-boxShadow: 0 0 0 1px rgba(0, 0, 0, .08), 0 2px 5px 0 rgba(0, 0, 0, .12);
  --ts-menu-caret-icon-adjustment: 0;
  --ts-menu-maxHeight: 12rem;
  --ts-menu-drag-placeholder-minHeight: 32px;
  --ts-menu-checkbox-drag-padding: 0 var(--ts-space-inset-500);
  --ts-menu-card-utility-horizontalOffset: var(--ts-space-inset-200);
  --ts-menu-panel-padding: 8px;
  --ts-menu-borderRadius: var(--ts-border-radius-base);
  --ts-menu-panel-typography: 400 13px var(--ts-typography-stack-base);
  --ts-menu-panel-item-drag-paddingRight: 32px;
  --ts-menu-panel-preview-backgroundColor: var(--ts-color-utility-100);
  --ts-menu-panel-preview-border: 1px solid var(--ts-color-utility-300);
  --ts-menu-utilityTrigger-borderRadius: var(--ts-border-radius-circle);
  --ts-menu-utilityTrigger-xy: 40px;
  --ts-menu-utilityTrigger-transition: color var(--ts-animation-time-duration-200) var(--ts-animation-easing-easeOut);
  --ts-menu-utilityTrigger-hover-color: var(--ts-color-primary-500);
}

.ts-menu {
  display: inline-block;

  &--disabled {
    cursor: not-allowed;
  }

  // <ts-button> trigger to show the menu
  ts-button {
    &[data-disabled='true'] {
      pointer-events: none;
    }

    .c-button {
      &.c-button--secondary {
        --tsb-borderColor: var(--ts-menu-secondary-borderColor);
      }
    }
  }

  // Top level styles should be nested here
  .c-menu {
    font: var(--ts-menu-typography);
    max-height: var(--ts-menu-maxHeight);
  }

  .c-menu__trigger-icon {
    display: inline-block;
    height: 100%;
    margin: var(--ts-menu-trigger-icon-margin);
    position: relative;
    top: 3px;
    vertical-align: middle;
    width: var(--ts-menu-trigger-icon-width);

    svg {
      max-height: 100%;
      max-width: 100%;
    }
  }

  .c-menu__trigger {
    &--utility {
      @include button-base;
      border-radius: var(--ts-menu-utilityTrigger-borderRadius);
      flex-shrink: 0;
      height: var(--ts-menu-utilityTrigger-xy);
      line-height: var(--ts-menu-utilityTrigger-xy);
      min-width: 0;
      padding: 0;
      transition: var(--ts-menu-utilityTrigger-transition);
      width: var(--ts-menu-utilityTrigger-xy);

      &:focus,
      &:hover {
        color: var(--ts-menu-utilityTrigger-hover-color);
      }
    }

    // For the dropdown caret, lessen the right side whitespace
    .c-button {
      .c-menu__caret {
        margin-right: var(--ts-menu-caret-icon-adjustment);
      }
    }
  }
}

.ts-menu__panel {
  border-radius: var(--ts-menu-borderRadius);
  box-shadow: var(--ts-menu-boxShadow);
  font: var(--ts-menu-panel-typography);
  padding: var(--ts-menu-panel-padding);

  button {
    &.ts-menu__item {
      @include button-base;
    }
  }

  &.mat-menu-panel {
    min-height: auto;
    min-width: auto;

    .mat-menu-content {
      @include flex-container(column, nowrap, start, stretch);
      background-color: var(--ts-menu-trigger-backgroundColor);
      padding: 0;

      [cdk-droplist] {
        @include flex-container(column, nowrap, start, stretch);
      }
    }
  }

  // Set a background so .cdk-drag items don't have a transparent background
  .ts-checkbox {
    background-color: var(--ts-menu-trigger-backgroundColor);
  }

  // Drop area
  .cdk-drag-placeholder {
    background-color: var(--ts-menu-panel-preview-backgroundColor);
    border: var(--ts-menu-panel-preview-border);
    border-radius: var(--ts-menu-borderRadius);
    // Match the height of the default checkbox
    min-height: var(--ts-menu-drag-placeholder-minHeight);
  }
}

.ts-menu__item,
.ts-menu__item--transparent {
  // Make the item shorter
  --ts-checkbox-component-height: 24px;
  --ts-checkbox-outer-margin: 0;

  // Make the entire horizontal space interactive
  .c-checkbox,
  .c-checkbox__label {
    width: 100%;
  }
}

.ts-menu__item {
  &:not(.ts-checkbox) {
    @include menu-item;
  }

  &.ts-checkbox {
    .c-checkbox__label {
      --ts-checkbox-box-left: 8px;
      --ts-checkbox-svg-left: 10px;
      @include menu-item;
      padding-left: calc(26px + 8px);
    }
  }

  // Create space for drag indicator
  &.cdk-drag {
    padding-right: var(--ts-menu-panel-item-drag-paddingRight);
  }

  // Draggable preview
  &.cdk-drag-preview {
    align-items: center;
    background-color: var(--ts-menuItem-backgroundColor-hover);
    display: flex;
    flex-direction: row;
    min-height: auto;
    // NOTE: Important is needed to override underlying important
    /* stylelint-disable-next-line declaration-no-important */
    padding: var(--ts-menuItem-padding) !important;
  }
}


// NOTE: When being dragged the element is not nested inside the panel
.ts-checkbox {
  // Item being dragged
  &.cdk-drag-preview {
    align-items: center;
    display: flex;
    flex-direction: row;
    padding: var(--ts-menu-checkbox-drag-padding);
  }
}

// Target a utility instance within a card
.c-card {
  .c-menu {
    &.c-menu--utility {
      position: absolute;
      right: var(--ts-menu-card-utility-horizontalOffset);
      top: var(--ts-menu-card-utility-horizontalOffset);
    }
  }
}
