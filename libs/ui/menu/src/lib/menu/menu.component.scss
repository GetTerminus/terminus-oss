:root {
  --ts-menu-typography: var(--ts-typography-compound-body);
  --ts-menu-trigger-color: var(--ts-color-primary-500);
  --ts-menu-trigger-hover-color: var(--ts-color-primary-700);
  --ts-menu-trigger-backgroundColor: var(--ts-color-base-white);
  --ts-menu-trigger-icon-width: 12px;
  --ts-menu-trigger-icon-margin: 0 8px;
  --ts-menu-secondary-borderColor: var(--ts-color-utility-400);
  --ts-menu-boxShadow: 0 0 0 1px rgba(0, 0, 0, .08), 0 2px 5px 0 rgba(0, 0, 0, .12);
  --ts-menu-caret-icon-adjustment: 0;
  --ts-menu-maxHeight: 12rem;
  --ts-menu-drag-placeholder-minHeight: 50px;
  --ts-menu-checkbox-drag-padding: 0 var(--ts-space-inset-500);
  --ts-menu-card-utility-horizontalOffset: var(--ts-space-inset-200);
}

.ts-menu {
  display: inline-block;

  &--disabled {
    cursor: not-allowed;
  }

  // <ts-button> trigger to show the menu
  ts-button {
    &[data-disabled='true'] {
      pointer-events: none;
    }

    .c-button {
      &.c-button--secondary {
        --tsb-borderColor: var(--ts-menu-secondary-borderColor);
      }
    }
  }

  // Top level styles should be nested here
  .c-menu {
    font: var(--ts-menu-typography);
    max-height: var(--ts-menu-maxHeight);
  }

  .c-menu__trigger-icon {
    display: inline-block;
    height: 100%;
    margin: var(--ts-menu-trigger-icon-margin);
    position: relative;
    top: 3px;
    vertical-align: middle;
    width: var(--ts-menu-trigger-icon-width);

    svg {
      max-height: 100%;
      max-width: 100%;
    }
  }

  .c-menu__trigger {
    .mat-button-wrapper {
      display: inline-block;
    }

    // For the dropdown caret, lessen the right side whitespace
    .c-button {
      .c-menu__caret {
        margin-right: var(--ts-menu-caret-icon-adjustment);
      }
    }
  }
}

// Target button instances nested inside a TsMenuComponent
.mat-menu-panel {
  // Needed for specificity
  .ts-button {
    button {
      &.c-button {
        --tsb-color: var(--ts-menu-trigger-color);
        background-color: var(--ts-menu-trigger-backgroundColor);
        border-color: transparent;
        border-radius: 0;
        text-align: left;
        width: 100%;

        &:focus,
        &:active,
        &:hover {
          --tsb-color: var(--ts-menu-trigger-hover-color);
          background-color: var(--ts-menu-trigger-backgroundColor);
          border-color: transparent;
        }
      }
    }
  }
}

.ts-menu__panel {
  box-shadow: var(--ts-menu-boxShadow);

  &.mat-menu-panel {
    min-height: auto;
  }

  .mat-menu-content {
    background-color: var(--ts-menu-trigger-backgroundColor);
    // NOTE: Universal selector needed since we don't know what the first child will be
    > * {
      display: block;
    }
  }

  // Set a background so .cdk-drag items don't have a transparent background
  .ts-checkbox {
    background-color: var(--ts-menu-trigger-backgroundColor);
  }

  // Drop area
  .cdk-drag-placeholder {
    // Match the height of the default checkbox
    min-height: var(--ts-menu-drag-placeholder-minHeight);
  }
}

// NOTE: When being dragged the element is not nested inside the panel
.ts-checkbox {
  // Item being dragged
  &.cdk-drag-preview {
    align-items: center;
    display: flex;
    flex-direction: row;
    padding: var(--ts-menu-checkbox-drag-padding);
  }
}


// Target a utility instance within a card
.c-card {
  .c-menu {
    &.c-menu--utility {
      position: absolute;
      right: var(--ts-menu-card-utility-horizontalOffset);
      top: var(--ts-menu-card-utility-horizontalOffset);
    }
  }
}
