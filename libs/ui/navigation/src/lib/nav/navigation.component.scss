@import '~@terminus/ui-styles/helpers';

.ts-navigation {
  @include reset;
  display: inline-block;
  flex: 1 1 auto;
  max-width: 100%;
  overflow: hidden;

  // Top level styles should be nested here
  .c-navigation {
    background-color: var(--ts-color-navigation-blue);
    color: var(--ts-color-light);
    font: var(--ts-typography-compound-body2);
  }
}

.c-navigation {
  // <div> wrapper for list of navigation items
  .c-navigation__items {
    overflow: hidden;
    padding-right: var(--ts-space-inset-500);
  }

  // <button> individual nav item
  .c-navigation__item {
    color: inherit;
    // NOTE: If a link has an action rather than a destination, the default cursor will be used.
    // Force the pointer cursor type.
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
    letter-spacing: .04em;
    padding: 0 var(--ts-space-inset-500);
    // Set up for bottom pseudo element
    position: relative;
    text-decoration: none;

    &:focus,
    &:hover,
    &--active {
      outline: 0;

      .c-navigation__item-inner {
        &::after {
          opacity: 1;
          transition-duration: var(--ts-animation-time-duration-200);
        }
      }
    }

    // <span> inner wrapper
    &-inner {
      display: block;
      white-space: nowrap;
      width: 100%;

      &::after {
        background-color: var(--ts-color-base-white);
        bottom: 0;
        content: '';
        height: 4px;
        left: 50%;
        opacity: 0;
        position: absolute;
        transform: translateX(-50%);
        transition: opacity var(--ts-animation-time-duration-100) ease-in-out;
        width: var(--width-calc-2);
        will-change: opacity;
        --width-calc-1: calc(var(--ts-space-inset-500) * 2);
        --width-calc-2: calc(100% - var(--width-calc-1));
      }
    }
  }

  // <button> trigger to show hidden nav items (Welcome, user)
  .c-navigation__trigger {
    $separator-height: 70%;
    $separator-vertical-spacing: #{(100% - $separator-height) / 2};
    $separator-color: rgba(color(pure), .5);
    @include button-base;
    display: block;
    letter-spacing: .04em;
    line-height: var(--ts-typography-lineHeight-400);

    // Create vertical separator between top-level nav items and dropdown
    &::after {
      background-color: $separator-color;
      bottom: $separator-vertical-spacing;
      content: '';
      height: $separator-height;
      left: 0;
      position: absolute;
      top: $separator-vertical-spacing;
      width: 1px;
    }

    // override material styles on the inner wrapper
    .mat-button-wrapper {
      display: inline-block;
      padding: var(--ts-space-inset-300) var(--ts-space-inset-600) var(--ts-space-inset-300) var(--ts-space-inset-500);
      position: relative;
      text-align: right;
    }

    // <span> wrapper for welcome message
    &-welcome {
      font-weight: $type__weight--base;
    }

    // <ts-icon>
    &-icon {
      position: absolute;
      right: 0;
      // HACK: vertical alignment just doesn't seem right without this
      transform: translateY(1px);
    }
  }
}


//
// NOTE: These must live outside `c-navigation` since the menu panel is not nested
//

// <div> container for hidden nav items
.c-navigation__hidden-items {
  font: var(--ts-typography-compound-body);
  // set up for spacer div
  position: relative;

  // The top border radius leaves a 1px gap between the primary nav bar and the menu
  &.mat-menu-panel {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  .mat-menu-content {
    background-color: var(--ts-color-navigation-blue);
    // override material styles
    padding: 0;

    // needed for specificity since we are no longer nested below primary class
    .mat-menu-item {
      color: var(--ts-color-light);
    }
  }
}
