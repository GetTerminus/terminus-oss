:root {
  // Theme styles
  // DEFAULT
  --tsb-theme-default-backgroundColor: var(--ts-color-primary-500);
  --tsb-theme-default-backgroundColor-hover: var(--ts-color-primary-700);
  --tsb-theme-default-backgroundColor-active: var(--ts-color-primary-900);
  --tsb-theme-default-backgroundColor-focus: var(--ts-color-primary-500);
  --tsb-theme-default-backgroundColor-disabled: var(--ts-color-utility-300);
  --tsb-theme-default-borderColor: var(--ts-color-primary-500);
  --tsb-theme-default-borderColor-hover: var(--ts-color-primary-700);
  --tsb-theme-default-borderColor-active: var(--ts-color-primary-900);
  --tsb-theme-default-borderColor-focus: var(--ts-color-primary-500);
  --tsb-theme-default-borderColor-disabled: var(--ts-color-utility-300);
  --tsb-theme-default-color: var(--ts-color-light);
  --tsb-theme-default-color-active: var(--ts-color-light);
  --tsb-theme-default-color-focus: var(--ts-color-light);
  --tsb-theme-default-boxShadow-color-focus: var(--ts-color-primary-300);
  // SECONDARY
  --tsb-theme-secondary-backgroundColor: var(--ts-color-light);
  --tsb-theme-secondary-backgroundColor-hover: var(--ts-color-primary-100);
  --tsb-theme-secondary-backgroundColor-active: var(--ts-color-primary-300);
  --tsb-theme-secondary-backgroundColor-focus: var(--ts-color-light);
  --tsb-theme-secondary-backgroundColor-disabled: var(--ts-color-light);
  --tsb-theme-secondary-borderColor: var(--ts-color-utility-300);
  --tsb-theme-secondary-borderColor-hover: var(--ts-color-utility-500);
  --tsb-theme-secondary-borderColor-active: var(--ts-color-utility-600);
  --tsb-theme-secondary-borderColor-focus: var(--ts-color-utility-400);
  --tsb-theme-secondary-borderColor-disabled: var(--ts-color-utility-200);
  --tsb-theme-secondary-color: var(--ts-color-primary-500);
  --tsb-theme-secondary-color-active: var(--ts-color-primary-500);
  --tsb-theme-secondary-color-focus: var(--ts-color-primary-500);
  --tsb-theme-secondary-boxShadow-color-focus: var(--ts-color-primary-300);
  // WARNING
  --tsb-theme-warning-backgroundColor: var(--ts-color-light);
  --tsb-theme-warning-backgroundColor-hover: var(--ts-color-warn-100);
  --tsb-theme-warning-backgroundColor-active: var(--ts-color-warn-300);
  --tsb-theme-warning-backgroundColor-focus: var(--ts-color-light);
  --tsb-theme-warning-backgroundColor-disabled: var(--ts-color-light);
  --tsb-theme-warning-borderColor: var(--ts-color-utility-300);
  --tsb-theme-warning-borderColor-hover: var(--ts-color-utility-500);
  --tsb-theme-warning-borderColor-active: var(--ts-color-utility-600);
  --tsb-theme-warning-borderColor-focus: var(--ts-color-utility-400);
  --tsb-theme-warning-borderColor-disabled: var(--ts-color-utility-200);
  --tsb-theme-warning-color: var(--ts-color-warn-500);
  --tsb-theme-warning-color-active: var(--ts-color-warn-500);
  --tsb-theme-warning-color-focus: var(--ts-color-warn-500);
  --tsb-theme-warning-boxShadow-color-focus: var(--ts-color-warn-300);

  // Variables to overwrite with theme values
  --tsb-color: var(--ts-color-light);
  --tsb-backgroundColor: var(--ts-color-primary-500);
  --tsb-borderColor: var(--ts-color-primary-500);
  --tsb-boxShadow-color: var(--ts-color-primary-300);

  --tsb-lineHeight: 35px;
  --tsb-rotation: 360deg;
  --tsb-icon-negative-padding-adjustment: -4px;
  --tsb-collapsible-first-icon-adjustment: -.15em;
  // NOTE: This is to better align with inputs that have extra space above and below
  --tsb-margin: 4px 0;
  --tsb-padding: 0 var(--ts-space-inset-400);
  --tsb-padding-collapsed: 0 6px;
  --tsb-borderRadius: var(--ts-border-radius-base);
  --tsb-borderRadius-collapsible: 2em;
  --tsb-padding-right-progress: 36px;
  --tsb-icon-vertical-adjustment: -.15em;
  --tsb-icon-horizontal-adjustment: .2em;

  // NOTE: All transition durations are based off of the content transition.
  --tsb-content-transitionDuration: var(--ts-animation-time-duration-500);
  --tsb-icon-transitionDuration-collapse: calc(var(--tsb-content-transitionDuration) - 100ms);
  --tsb-icon-transitionDuration-expand: calc(var(--tsb-icon-transitionDuration-collapse) - 100ms);
  --tsb-label-transitionDuration: calc(var(--tsb-icon-transitionDuration-expand) - 100ms);
  --tsb-maxWidth-transition: max-width var(--tsb-content-transitionDuration) var(--ts-animation-easing-ease);
  --tsb-icon-transition: transform var(--tsb-icon-transitionDuration-expand) var(--ts-animation-easing-ease);
  --tsb-spinner-transition: opacity var(--tsb-label-transitionDuration) var(--ts-animation-easing-ease);
}

.ts-button {
  display: inline-block;
  margin: var(--tsb-margin);

  // Top level styles should be nested here
  .c-button {
    background-color: var(--tsb-backgroundColor);
    border: 1px solid var(--tsb-borderColor);
    border-radius: var(--tsb-borderRadius);
    color: var(--tsb-color);
    cursor: pointer;
    font: var(--ts-typography-compound-body2);
    font-size: 14px;
    line-height: var(--tsb-lineHeight);
    padding: var(--tsb-padding);
    position: relative;
    transition-duration: var(--tsb-icon-transitionDuration-collapse);
    transition-property: color, box-shadow, border-color, background-color;
    transition-timing-function: var(--ts-animation-easing-ease);

    &[disabled] {
      --tsb-borderColor: var(--tsb-theme-default-borderColor-disabled);
      --tsb-color: var(--ts-color-utility-600);
      cursor: not-allowed;
    }

    &:focus {
      box-shadow: 0 0 2px 2px var(--tsb-boxShadow-color);
      outline: none;
    }

    $themes: default secondary warning;
    @each $theme in $themes {
      &--#{$theme} {
        --tsb-boxShadow-color: var(--tsb-theme-#{$theme}-boxShadow-color-focus);
        --tsb-color: var(--tsb-theme-#{$theme}-color);
        --tsb-backgroundColor: var(--tsb-theme-#{$theme}-backgroundColor);
        --tsb-borderColor: var(--tsb-theme-#{$theme}-borderColor);

        &[disabled] {
          --tsb-backgroundColor: var(--tsb-theme-#{$theme}-backgroundColor-disabled);
          --tsb-borderColor: var(--tsb-theme-#{$theme}-borderColor-disabled);
        }

        &:not([disabled]) {
          &:hover {
            --tsb-backgroundColor: var(--tsb-theme-#{$theme}-backgroundColor-hover);
            --tsb-borderColor: var(--tsb-theme-#{$theme}-borderColor-hover);
          }

          &:focus {
            --tsb-boxShadow-color: var(--tsb-theme-#{$theme}-boxShadow-color-focus);
            // stylelint-disable-next-line declaration-no-important
            --tsb-borderColor: var(--tsb-theme-#{$theme}-borderColor-focus) !important;

            &:hover {
              --tsb-borderColor: var(--tsb-theme-#{$theme}-backgroundColor-hover);
            }
          }

          &:active {
            --tsb-backgroundColor: var(--tsb-theme-#{$theme}-backgroundColor-active);
            --tsb-borderColor: var(--tsb-theme-#{$theme}-borderColor-active);
          }
        }
      }
    }

    // Target the prefix icon
    &__icon {
      margin-right: var(--tsb-icon-horizontal-adjustment);
    }

    // Target any icon inside a button
    // Adjust icon vertical layout
    .c-icon {
      // Fix small vertical alignment issue between icon & text
      margin-top: var(--tsb-icon-vertical-adjustment);
      transition: var(--tsb-icon-transition);
      vertical-align: middle;
    }

    // Overwrite the Material spinner to fit our layout
    .c-button__spinner {
      display: inline-block;
      opacity: 0;
      position: absolute;
      right: 12px;
      top: 6px;
      transition: var(--tsb-spinner-transition);

      &--active {
        opacity: 1;
      }

      circle {
        stroke: var(--ts-color-utility-500);
      }
    }

    &--progress {
      padding-right: 42px;
    }

    // COLLAPSIBLE
    &--collapsible {
      border-radius: var(--tsb-borderRadius-collapsible);

      // When collapsible AND disabled
      &.c-button--collapsed,
      &[disabled] {
        &:not(:hover) {
          &:not(:focus) {
            padding: var(--tsb-padding-collapsed);

            .ts-icon {
              margin-right: 0;
            }

            .c-icon {
              position: relative;
              transform: rotate(var(--tsb-rotation));
              transition-duration: var(--tsb-icon-transitionDuration-collapse);
            }

            // collapse the text content
            .c-button__content {
              max-width: 0;
              padding: 0;
            }
          }
        }
      }

      // Fix left alignment when button is expanded and an icon is the first item
      &.c-button--collapsed {
        &:hover,
        &:focus {
          .c-icon {
            margin-left: var(--tsb-collapsible-first-icon-adjustment);
          }
        }
      }

      // Padding addition for FontAwesome switch
      .c-icon {
        padding: 0 .2em;
      }

      .c-button__content {
        display: inline-block;
        max-width: 400px;
        overflow: hidden;
        transition: var(--tsb-maxWidth-transition);
        vertical-align: bottom;
        white-space: nowrap;

        .ts-icon {
          margin-left: var(--tsb-icon-negative-padding-adjustment);
          margin-right: var(--tsb-icon-negative-padding-adjustment);
        }
      }

      .mat-ripple {
        border-radius: var(--tsb-borderRadius-collapsible);
      }
    }
  }

  // Target instances nested inside the TsSearchComponent
  .ts-search & {
    // Offset to account for space under input for error messages
    position: relative;
    top: calc(var(--ts-space-stack-400) * -1);
  }
}

// Target button instances nested inside a TsMenuComponent
.mat-menu-panel {
  // Needed for specificity
  .ts-button {
    button {
      &.c-button {
        background-color: var(--ts-color-light);
        border-color: transparent;
        border-radius: 0;
        text-align: left;
        width: 100%;

        &:focus,
        &:active,
        &:hover {
          background-color: var(--ts-color-light);
          border-color: transparent;
        }

        &--default {
          --tsb-color: var(--ts-color-primary-500);

          &:focus,
          &:active,
          &:hover {
            --tsb-color: var(--ts-color-primary-700);
          }
        }

        &--secondary {
          --tsb-color: var(--ts-color-accent-500);

          &:focus,
          &:active,
          &:hover {
            --tsb-color: var(--ts-color-accent-700);
          }
        }

        &--warning {
          --tsb-color: var(--ts-color-warn-500);

          &:focus,
          &:active,
          &:hover {
            --tsb-color: var(--ts-color-warn-700);
          }
        }
      }
    }
  }
}
