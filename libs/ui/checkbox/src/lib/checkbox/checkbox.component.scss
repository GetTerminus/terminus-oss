:root {
  --ts-checkbox-typography: var(--ts-typography-compound-body);
  --ts-checkbox-fontSize: 14px;
  --ts-checkbox-selected-color: var(--ts-color-primary-500);
  --ts-checkbox-selected-hover-color: var(--ts-color-primary-700);
  --ts-checkbox-empty-borderColor: var(--ts-color-utility-400);
  --ts-checkbox-disabled-borderColor: var(--ts-color-utility-200);
  --ts-checkbox-indeterminate-backgroundColor: var(--ts-color-utility-600);
  --ts-checkbox-indeterminate-hover-backgroundColor: var(--ts-color-utility-700);
  // Magic number to match the vertical layout of buttons
  --ts-checkbox-component-height: 37px;
  // Custom margin added to match buttons so that both match the vertical offset of the input
  --ts-checkbox-outer-margin: 4px 0;
  --ts-checkbox-check-xy: 10px;
  --ts-checkbox-box-left: 0;
  --ts-checkbox-svg-left: calc(var(--ts-checkbox-box-left) + 2px);
  --ts-checkbox-input-xy: 14px;
  --ts-checkbox-label-color: var(--ts-color-utility-600);
  --ts-checkbox-input-disabled-svg-color: var(--ts-color-utility-600);
  --ts-checkbox-input-svg-color: var(--ts-color-base-white);
  --ts-checkbox-input-backgroundColor: var(--ts-color-base-white);
  --ts-checkbox-input-borderRadius: 3px;
  --ts-checkbox-input-borderColor: var(--ts-color-utility-400);
  --ts-checkbox-input-hover-borderColor: var(--ts-color-utility-500);
  --ts-checkbox-input-focus-borderColor: var(--ts-color-primary-300);
  --ts-checkbox-input-disabled-color: var(--ts-color-utility-300);
  --ts-checkbox-input-marginRight: var(--ts-space-base-small0);
  --ts-checkbox-transitionDuration: var(--ts-animation-time-duration-200);
  --ts-checkbox-transitionFunction: var(--ts-animation-easing-easeOut);
}

.cdk-visually-hidden {
  $smallest-adjustment: 1px;

  // Avoid some cases where the browser will still render the native controls (see #9049).
  -webkit-appearance: none;
  -moz-appearance: none;

  border: 0;
  clip: rect(0 0 0 0);
  height: $smallest-adjustment;
  margin: -$smallest-adjustment;

  // Avoid browsers rendering the focus ring in some cases.
  outline: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: $smallest-adjustment;
}

.ts-checkbox {
  align-items: center;
  display: inline-flex;
  margin: var(--ts-checkbox-outer-margin);
  min-height: var(--ts-checkbox-component-height);

  &.ts-checkbox--indeterminate {
    .c-checkbox__label {
      &::before {
        --ts-checkbox-input-backgroundColor: var(--ts-checkbox-indeterminate-backgroundColor);
        --ts-checkbox-input-borderColor: var(--ts-checkbox-indeterminate-backgroundColor);
      }

      &:hover {
        &::before {
          --ts-checkbox-input-backgroundColor: var(--ts-checkbox-indeterminate-hover-backgroundColor);
          --ts-checkbox-input-borderColor: var(--ts-checkbox-indeterminate-hover-backgroundColor);
          --ts-checkbox-input-svg-color: var(--ts-checkbox-input-disabled-svg-color);
        }
      }
    }
    input {
      &[disabled] {
        + .c-checkbox__label {
          &::before {
            --ts-checkbox-input-backgroundColor: var(--ts-checkbox-input-disabled-color);
            --ts-checkbox-input-borderColor: var(--ts-checkbox-input-disabled-color);
          }
          .c-checkbox__label-mixed-mark {
            background-color: var(--ts-checkbox-input-disabled-svg-color);
          }
        }
      }
    }

    .c-checkbox__label-mixed-mark {
      opacity: 1;
      width: calc(var(--ts-checkbox-input-xy) - 6px);
    }

    svg {
      opacity: 0;
    }
  }

  .c-checkbox {
    position: relative;

    input {
      &:focus {
        &:not(:focus-visible) {
          outline: none;
        }

        + .c-checkbox__label {
          &::before {
            box-shadow: 0 0 0 2px var(--ts-checkbox-input-focus-borderColor);
          }
        }
      }

      &:checked {
        + .c-checkbox__label {
          &::before {
            --ts-checkbox-input-backgroundColor: var(--ts-checkbox-selected-color);
            --ts-checkbox-input-borderColor: var(--ts-checkbox-selected-color);
            --ts-checkbox-input-svg-color: var(--ts-checkbox-input-disabled-svg-color);
          }

          .path {
            stroke: var(--ts-checkbox-input-svg-color);
            stroke-dashoffset: 0;
          }

          &:hover {
            &::before {
              --ts-checkbox-input-backgroundColor: var(--ts-checkbox-selected-hover-color);
              --ts-checkbox-input-borderColor: var(--ts-checkbox-selected-hover-color);
            }
          }
        }

        &:disabled {
          + .c-checkbox__label {
            &::before {
              --ts-checkbox-input-backgroundColor: var(--ts-checkbox-input-disabled-color);
              --ts-checkbox-input-borderColor: var(--ts-checkbox-input-disabled-color);
            }

            svg {
              --ts-checkbox-input-svg-color: var(--ts-checkbox-input-disabled-svg-color);
            }
          }
        }
      }

      &:disabled {
        + .c-checkbox__label {
          cursor: not-allowed;

          &::before {
            --ts-checkbox-input-borderColor: var(--ts-checkbox-input-disabled-color);
          }
        }
      }
    }
  }

  // If nothing is passed to <ng-content>, we fall back to the @Input value
  .c-checkbox__label-content-wrap {
    &:not(:empty) {
      + .c-checkbox__label-content-default {
        display: none;
      }
    }
  }

  .c-checkbox__label {
    color: var(--ts-checkbox-label-color);
    cursor: pointer;
    display: inline-block;
    font: var(--ts-checkbox-typography);
    font-size: var(--ts-checkbox-fontSize);
    padding-left: calc(var(--ts-checkbox-input-xy) + var(--ts-checkbox-input-marginRight));
    user-select: none;

    &:hover {
      --ts-checkbox-input-borderColor: var(--ts-checkbox-input-hover-borderColor);
    }

    // Square container for checkmark
    &::before {
      background-color: var(--ts-checkbox-input-backgroundColor);
      border: 2px solid var(--ts-checkbox-input-borderColor);
      border-radius: var(--ts-checkbox-input-borderRadius);
      content: '';
      display: inline-block;
      height: var(--ts-checkbox-input-xy);
      left: var(--ts-checkbox-box-left);
      margin-right: var(--ts-checkbox-input-marginRight);
      position: absolute;
      top: calc(50% - 1px);
      transform: translateY(-50%);
      transition: all var(--ts-checkbox-transitionDuration) var(--ts-checkbox-transitionFunction);
      width: var(--ts-checkbox-input-xy);
    }

    // The check (âœ“)
    svg {
      height: var(--ts-checkbox-check-xy);
      left: var(--ts-checkbox-svg-left);
      pointer-events: none;
      position: absolute;
      top: calc(50% - 1px);
      transform: translateY(-50%);
      width: var(--ts-checkbox-check-xy);
    }

    .path {
      stroke: var(--ts-checkbox-input-svg-color);
      stroke-dasharray: 111.46px;
      stroke-dashoffset: 111.46px;
      transition: all var(--ts-checkbox-transitionDuration) var(--ts-checkbox-transitionFunction);
    }

    &-mixed-mark {
      background-color: var(--ts-checkbox-input-svg-color);
      display: inline-block;
      height: 2px;
      left: 3px;
      pointer-events: none;
      position: absolute;
      top: 50%;
      transform: translateY(calc(-50% + 1px));
      transition: width 200ms ease-out;
      width: 0;
    }
  }
}
