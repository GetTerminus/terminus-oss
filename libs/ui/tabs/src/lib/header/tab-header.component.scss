@import '~@terminus/ui-styles/helpers';

:root {
  --ts-tab-header-border: 1px solid var(--ts-color-utility-300);
  --ts-tab-bar-height: 48px;
  --ts-tab-zindex-lower: 1;
  --ts-tab-zindex-upper: 2;
  --ts-tab-pagination-minWidth: 32px;
  --ts-tab-chevron-xy: 8px;
}

// The top section of the view containing the tab labels
.ts-tab-header {
  border-bottom: var(--ts-tab-header-border);
  display: flex;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
}

// Wraps each tab label
.ts-tab-label {
  @include cdk-high-contrast {
    opacity: 1;
  }
  align-items: center;
  box-sizing: border-box;
  color: var(--ts-color-base-black);
  cursor: pointer;
  display: inline-flex;
  height: var(--ts-tab-bar-height);
  justify-content: center;
  opacity: .6;
  padding: 0 var(--ts-space-inset-600);
  position: relative;
  text-align: center;
  white-space: nowrap;

  &:focus {
    @include cdk-high-contrast {
      outline: dotted 2px;
    }
    outline: none;

    &:not(.ts-tab-label--disabled) {
      opacity: 1;
    }
  }

  &.ts-tab-label--disabled {
    @include cdk-high-contrast {
      opacity: .5;
    }
    color: var(--ts-color-utility-300);
    cursor: not-allowed;
  }

  // Wrapper for label content
  .ts-tab-label__content {
    @include truncate-overflow;
    align-items: center;
    display: inline-block;
    justify-content: center;
    white-space: nowrap;
  }
}

// Pagination controls for when tabs are wider than allowed width
.ts-tab-header__pagination {
  align-items: center;
  cursor: pointer;
  display: none;
  justify-content: center;
  min-width: var(--ts-tab-pagination-minWidth);
  position: relative;
  -webkit-tap-highlight-color: transparent;
  touch-action: none;
  user-select: none;
  z-index: var(--ts-tab-zindex-upper);

  .ts-tab-header__pagination--enabled & {
    display: flex;
  }

  // Icon within a pagination control
  .ts-tab-header__pagination-chevron {
    border-color: var(--ts-color-base-black);
    border-style: solid;
    border-width: 2px 2px 0 0;
    content: '';
    height: var(--ts-tab-chevron-xy);
    width: var(--ts-tab-chevron-xy);
  }

  // The pagination control that is displayed at the beginning of the tab header
  &--before {
    padding-left: var(--ts-space-inset-200);

    .ts-tab-header__pagination-chevron {
      transform: rotate(-135deg);
    }
  }

  // The pagination control that is displayed at the end of the tab header
  &--after {
    padding-right: var(--ts-space-inset-200);

    .ts-tab-header__pagination-chevron {
      transform: rotate(45deg);
    }
  }
}

.ts-tab-header__pagination--disabled {
  box-shadow: none;
  cursor: default;

  .ts-tab-header__pagination-chevron {
    color: var(--ts-color-utility-500);
  }
}

.ts-tab-header__labels-container {
  display: flex;
  flex-grow: 1;
  overflow: hidden;
  z-index: var(--ts-tab-zindex-lower);
}

// Inner container around tabs within the label container
.ts-tab-header__labels-container-inner {
  flex-grow: 1;
  position: relative;
  transition: transform var(--ts-tab-animation-duration) var(--ts-tab-ease-in-out-curve-function);
}

// The innermost wrapper for the collection of labels
.ts-tab-header__labels {
  display: flex;
}


// Layout and theming support based on parent classes
.ts-tab-collection {
  $theme-colors: (
    primary: var(--ts-color-primary-500),
    accent: var(--ts-color-accent-500),
    warn: var(--ts-color-warn-500),
  );
  --ts-tab-primary-color-hover: rgba(0, 83, 138, .2);
  --ts-tab-accent-color-hover: rgba(47, 133, 77, .2);
  --ts-tab-warn-color-hover: rgba(200, 96, 77, .2);

  // Add hover states for labels that match the current theme
  @each $name, $color in $theme-colors {
    &.ts-tab-collection--#{$name} {
      .ts-tab-label {
        transition: background-color var(--ts-tab-animation-duration) var(--ts-tab-ease-in-out-curve-function);

        &:not(.ts-tab-label--disabled) {
          &:focus {
            color: $color;
          }

          &:hover {
            background-color: var(--ts-tab-#{$name}-color-hover);
            color: $color;
          }
        }
      }
    }
  }

  // Align the tabs according to the container classes
  &.ts-tab-collection--start {
    .ts-tab-header__labels {
      justify-content: flex-start;
    }
  }

  &.ts-tab-collection--center {
    .ts-tab-header__labels {
      justify-content: center;
    }
  }

  &.ts-tab-collection--end {
    .ts-tab-header__labels {
      justify-content: flex-end;
    }
  }

  &.ts-tab-collection--stretch {
    .ts-tab-header__labels {
      .ts-tab-label {
        flex: 1;
      }
    }
  }

  &.ts-tab-collection--inverted-header {
    .ts-tab-header {
      border-bottom: none;
      border-top: var(--ts-tab-header-border);
    }
  }
}
