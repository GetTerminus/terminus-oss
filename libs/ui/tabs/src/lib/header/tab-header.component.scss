@import '~@angular/cdk';
@import '~@angular/cdk/a11y';
@import '~@terminus/ui-styles/helpers';

:root {
  --ts-tab-header-border: 1px solid var(--ts-color-utility-300);
  --ts-tab-header-bar-height: 48px;
  --ts-tab-header-zIndex-lower: 1;
  --ts-tab-header-zIndex-upper: 2;
  --ts-tab-header-pagination-minWidth: 32px;
  --ts-tab-header-chevron-xy: 8px;
  --ts-tab-label-borderRadius: var(--ts-border-radius-base) var(--ts-border-radius-base) 0 0;
  --ts-tab-label-inverted-borderRadius: 0 0 var(--ts-border-radius-base) var(--ts-border-radius-base);
  --ts-tab-label-color: var(--ts-color-base-black);
  --ts-tab-label-active-color: var(--ts-color-primary-500);
  --ts-tab-label-hover-color: rgba(0, 83, 138, .2);
  --ts-tab-label-disabled-color: var(--ts-color-utility-300);
  --ts-tab-label-padding: var(--ts-space-inset-600);
  --ts-tab-label-whitespace: nowrap;
  --ts-tab-label-textAlign: center;
  --ts-tab-label-transition: background-color var(--ts-animation-time-duration-200) var(--ts-tab-ease-in-out-curve-function);
  --ts-tab-label-inner-transition: transform var(--ts-animation-time-duration-200) cubic-bezier(.35, 0, .25, 1);
  --ts-tab-header-pagination-chevron-color: var(--ts-color-base-black);
  --ts-tab-header-pagination-disabled-chevron-color: var(--ts-color-utility-500);
  --ts-tab-header-pagination-firstLast-custom-padding: var(--ts-space-inset-200);
}

// The top section of the view containing the tab labels
.ts-tab-header {
  border-bottom: var(--ts-tab-header-border);
  display: flex;
  flex-shrink: 0;
  overflow: hidden;
  position: relative;
}

// Wraps each tab label
.ts-tab-label {
  @include high-contrast {
    opacity: 1;
  }
  align-items: center;
  border-radius: var(--ts-tab-label-borderRadius);
  box-sizing: border-box;
  color: var(--ts-tab-label-color);
  cursor: pointer;
  display: inline-flex;
  height: var(--ts-tab-header-bar-height);
  justify-content: center;
  padding: 0 var(--ts-tab-label-padding);
  position: relative;
  text-align: var(--ts-tab-label-textAlign);
  transition: var(--ts-tab-label-transition);
  white-space: var(--ts-tab-label-whitespace);

  &--active {
    &:not(.ts-tab-label--disabled) {
      --ts-tab-label-color: var(--ts-tab-label-active-color);
    }
  }

  &:not(.ts-tab-label--disabled) {
    &:focus {
      @include high-contrast {
        outline: dotted 2px;
      }
      color: var(--ts-tab-label-color);
      opacity: 1;
      outline: none;
    }

    &:hover {
      background-color: var(--ts-tab-label-hover-color);
      color: var(--ts-tab-label-color);
    }
  }

  &.ts-tab-label--disabled {
    @include high-contrast {
      opacity: .5;
    }
    --ts-tab-label-color: var(--ts-tab-label-disabled-color);
    cursor: not-allowed;
  }

  // Wrapper for label content
  .ts-tab-label__content {
    @include truncate-overflow;
    align-items: center;
    display: inline-block;
    justify-content: center;
    white-space: nowrap;
  }

  .ts-tab-collection--inverted-header & {
    --ts-tab-label-borderRadius: var(--ts-tab-label-inverted-borderRadius);
  }
}

// Pagination controls for when tabs are wider than allowed width
.ts-tab-header__pagination {
  align-items: center;
  cursor: pointer;
  display: none;
  justify-content: center;
  min-width: var(--ts-tab-header-pagination-minWidth);
  position: relative;
  -webkit-tap-highlight-color: transparent;
  touch-action: none;
  user-select: none;
  z-index: var(--ts-tab-header-zIndex-upper);

  .ts-tab-header__pagination--enabled & {
    display: flex;
  }

  // Icon within a pagination control
  .ts-tab-header__pagination-chevron {
    border-color: var(--ts-tab-header-pagination-chevron-color);
    border-style: solid;
    border-width: 2px 2px 0 0;
    content: '';
    height: var(--ts-tab-header-chevron-xy);
    width: var(--ts-tab-header-chevron-xy);
  }

  // The pagination control that is displayed at the beginning of the tab header
  &--before {
    padding-left: var(--ts-tab-header-pagination-firstLast-custom-padding);

    .ts-tab-header__pagination-chevron {
      transform: rotate(-135deg);
    }
  }

  // The pagination control that is displayed at the end of the tab header
  &--after {
    padding-right: var(--ts-tab-header-pagination-firstLast-custom-padding);

    .ts-tab-header__pagination-chevron {
      transform: rotate(45deg);
    }
  }
}

.ts-tab-header__pagination--disabled {
  box-shadow: none;
  cursor: default;

  .ts-tab-header__pagination-chevron {
    --ts-tab-header-pagination-chevron-color: var(--ts-tab-header-pagination-disabled-chevron-color);
  }
}

.ts-tab-header__labels-container {
  display: flex;
  flex-grow: 1;
  overflow: hidden;
  z-index: var(--ts-tab-header-zIndex-lower);
}

// Inner container around tabs within the label container
.ts-tab-header__labels-container-inner {
  flex-grow: 1;
  position: relative;
  transition: var(--ts-tab-label-inner-transition);
}

// The innermost wrapper for the collection of labels
.ts-tab-header__labels {
  display: flex;
}

// Layout support based on parent classes
.ts-tab-collection {
  // Align the tabs according to the container classes
  &.ts-tab-collection--start {
    .ts-tab-header__labels {
      justify-content: flex-start;
    }
  }

  &.ts-tab-collection--center {
    .ts-tab-header__labels {
      justify-content: center;
    }
  }

  &.ts-tab-collection--end {
    .ts-tab-header__labels {
      justify-content: flex-end;
    }
  }

  &.ts-tab-collection--stretch {
    .ts-tab-header__labels {
      .ts-tab-label {
        flex: 1;
      }
    }
  }

  &.ts-tab-collection--inverted-header {
    .ts-tab-header {
      border-bottom: none;
      border-top: var(--ts-tab-header-border);
    }
  }
}
