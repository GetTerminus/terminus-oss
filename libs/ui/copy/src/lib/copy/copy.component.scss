@import '~@terminus/ui-styles/helpers';

:root {
  --ts-copy-marginY: .2em;
  --ts-copy-marginX: calc(var(--ts-copy-marginY) * 2);
  --ts-copy-radius: var(--ts-border-radius-base);
  --ts-copy-icon-padding: .25em .5em .25em .6em;
  --ts-copy-icon-minWidth: 35px;
  --ts-copy-color: var(--ts-color-utility-700);
  --ts-copy-typography: var(--ts-typography-compound-body);
  --ts-copy-lineHeight: var(--ts-typography-lineHeight-500);
  --ts-copy-standard-border: 1px solid var(--ts-color-utility-300);
  --ts-copy-standard-transition: border-color var(--ts-animation-time-duration-200) ease-in-out var(--ts-animation-time-delay-100);
  --ts-copy-backgroundColor: var(--ts-color-utility-100);
  --ts-copy-border-focus: 1px solid var(--ts-color-primary-500);
  --ts-copy-boxShadow-focus: 0 0 2px 2px var(--ts-color-primary-200);
  --ts-copy-transitionDelay-focus: var(--ts-animation-time-delay-0);
  --ts-copy-tooltip-transitionDelay: 70ms;
  --ts-copy-tooltip-transition: opacity var(--ts-animation-time-duration-200) var(--ts-animation-easing-easeOut);
  --ts-copy-icon-transition: background-color var(--ts-animation-time-duration-200) var(--ts-animation-easing-easeIn);
  --ts-copy-icon-backgroundColor: var(--ts-color-primary-500);
  --ts-copy-icon-color: var(--ts-color-base-white);
  --ts-copy-icon-content-width: 35px;
}

.ts-copy {
  $ripple-opacity: .4;
  $primary: darken(color(primary), 10%);
  $ripple-primary: rgba($primary, $ripple-opacity);
  display: block;
  max-width: 100%;

  &:focus {
    outline: none;
  }

  .mat-ripple-element {
    // NOTE: Important needed to override inline Material styles
    /* stylelint-disable-next-line declaration-no-important */
    background-color: $ripple-primary !important;
  }

  // Top level styles should be nested here
  .c-copy {
    color: var(--ts-copy-color);
    font: var();
    position: relative;
  }

  .c-copy,
  .c-copy__content {
    &:focus {
      outline: none;
    }
  }

  .c-copy__tooltip,
  .c-tooltip {
    height: calc(100% + 2px);
  }

  //
  // Format support
  //
  &--standard {
    background-color: var(--ts-copy-backgroundColor);
    border: var(--ts-copy-standard-border);
    border-radius: var(--ts-copy-radius);
    transition: var(--ts-copy-standard-transition);

    // Adding tabindex to the element allows focus, but we don't need the visual indicator
    &:focus {
      border: var(--ts-copy-border-focus);
      box-shadow: var(--ts-copy-boxShadow-focus);
      outline: 0;
      transition-delay: var(--ts-copy-transitionDelay-focus);
    }
  }

  &--icon {
    display: inline-block;

    .c-copy__content {
      // Match the width of the icon
      width: var(--ts-copy-icon-content-width);
    }

    .c-copy {
      .c-copy__tooltip {
        opacity: 1;
        pointer-events: auto;
      }
    }
  }

  &:focus,
  &:hover {
    .c-copy__tooltip {
      opacity: 1;
      pointer-events: auto;
      transition-delay: var(--ts-copy-tooltip-transitionDelay);
    }
  }
}

.c-copy {
  // <div> Container for text content
  .c-copy__content {
    @include hidden-scrollbars;
    align-items: center;
    justify-content: center;
    line-height: var(--ts-copy-lineHeight);
    min-width: var(--ts-copy-icon-minWidth);
    overflow: hidden;
    white-space: nowrap;

    .ts-tooltip {
      display: block;
      max-width: 100%;
    }

    .c-tooltip {
      display: block;
      overflow: hidden;
      padding: var(--ts-copy-marginY) 0 var(--ts-copy-marginY) var(--ts-copy-marginX);
      text-overflow: ellipsis;
    }
  }

  .c-copy__tooltip {
    $offset-for-border-standard: -1px;
    bottom: $offset-for-border-standard;
    opacity: 0;
    pointer-events: none;
    position: absolute;
    right: $offset-for-border-standard;
    top: $offset-for-border-standard;
    transition: var(--ts-copy-tooltip-transition);

    .ts-tooltip {
      height: 100%;
    }

    .ts-icon {
      align-items: center;
      display: flex;
    }
  }

  // <div> The container for the icon
  .c-copy__icon {
    background-color: var(--ts-copy-icon-backgroundColor);
    border-radius: var(--ts-copy-radius);
    bottom: 0;
    color: var(--ts-copy-icon-color);
    cursor: pointer;
    display: flex;
    height: calc(100% - 2px);
    padding: var(--ts-copy-icon-padding);
    transition: var(--ts-copy-icon-transition);
    width: 36px;

    svg {
      width: 100%;
    }
  }

  // Adjust icon alignment
  .mat-icon {
    vertical-align: bottom;
  }

  .ts-copy--standard & {
    .c-copy__icon {
      border-radius: 0 var(--ts-copy-radius) var(--ts-copy-radius) 0;
    }
  }
}
