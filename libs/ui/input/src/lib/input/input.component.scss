@import '~@terminus/ui-styles/helpers';

:root {
  --ts-input-typography: var(--ts-typography-compound-body);
  --ts-input-color: var(--ts-color-utility-900);
  --ts-input-color-disabled: var(--ts-color-utility-600);
  --ts-input-backgroundColor: var(--ts-color-base-white);
  --ts-input-backgroundColor-disabled: var(--ts-color-utility-100);
  --ts-input-borderColor: var(--ts-color-utility-300);
  --ts-input-borderColor-error: var(--ts-color-warn-500);
  --ts-input-borderColor-disabled: var(--ts-color-utility-200);
  --ts-input-borderRadius: var(--ts-border-radius-base);
  --ts-input-fontSize: 14px;
  --ts-input-borderColor-hover: var(--ts-color-utility-400);
  --ts-input-borderColor-focus: var(--ts-color-primary-700);
  --ts-input-borderColor-error-focus: var(--ts-color-warn-700);
  --ts-input-shadow-focus: 0 0 2px 2px #d6efff;
  --ts-input-shadow-error-focus: 0 0 2px 2px #f8e2e4;
  --ts-input-padding: 10px 12px;
  --ts-input-label-color: var(--ts-color-utility-700);
  --ts-input-label-marginBottom: 6px;
  --ts-input-label-typography: 400 13px / 15px var(--ts-typography-stack-base-roboto);
  --ts-input-clear-size: 16px;
  --ts-input-clear-color: var(--ts-color-utility-600);
  --ts-input-clear-color-hover: var(--ts-color-warn-500);
  --ts-input-hint-typography: var(--ts-typography-compound-hint);
  --ts-input-error-color: var(--ts-color-warn-500);
}

.ts-input {
  display: block;
  font: var(--ts-input-typography);

  * {
    box-sizing: border-box;
  }

  &:focus {
    outline: none;
  }

  label {
    color: var(--ts-input-label-color);
    font: var(--ts-input-label-typography);
    margin-bottom: var(--ts-input-label-marginBottom);
  }

  // <div> wrapper for the <input>
  .ts-input__input-container {
    position: relative;
  }

  input,
  textarea {
    background-color: var(--ts-input-backgroundColor);
    border: 1px solid var(--ts-input-borderColor);
    border-radius: var(--ts-input-borderRadius);
    color: var(--ts-input-color);
    font: var(--ts-input-typography);
    font-size: var(--ts-input-fontSize);
    line-height: 1em;
    max-width: 100%;
    outline: none;
    padding: var(--ts-input-padding);
    transition: border-color 200ms ease-out;
    width: 100%;

    &:enabled {
      &:not(.c-input__text--error) {
        &:hover {
          --ts-input-borderColor: var(--ts-input-borderColor-hover);
        }

        &:focus {
          --ts-input-borderColor: var(--ts-input-borderColor-focus);
          box-shadow: var(--ts-input-shadow-focus);
        }
      }
    }

    &[disabled] {
      --ts-input-backgroundColor: var(--ts-input-backgroundColor-disabled);
      --ts-input-borderColor: var(--ts-input-borderColor-disabled);
      --ts-input-color: var(--ts-input-color-disabled);
      cursor: not-allowed;

      + .mat-datepicker-toggle {
        button {
          cursor: not-allowed;
        }
      }
    }

    &.c-input__text--error {
      --ts-input-borderColor: var(--ts-input-borderColor-error);

      &:focus {
        --ts-input-borderColor: var(--ts-input-borderColor-error-focus);
        box-shadow: var(--ts-input-shadow-error-focus);
      }
    }


    // Undo the red box-shadow glow added by Firefox on invalid inputs.
    // See https://developer.mozilla.org/en-US/docs/Web/CSS/:-moz-ui-invalid
    &:-moz-ui-invalid {
      box-shadow: none;
    }

    // Remove IE's default clear and reveal icons.
    &::-ms-clear,
    &::-ms-reveal {
      display: none;
    }

    // Clear Safari's decorations for search fields.
    &,
    &::-webkit-search-cancel-button,
    &::-webkit-search-decoration,
    &::-webkit-search-results-button,
    &::-webkit-search-results-decoration {
      -webkit-appearance: none;
    }

    // Also clear Safari's autofill icons. Note that this can't be in the
    // same selector as the IE ones, otherwise Safari will ignore it.
    // noinspection CssInvalidPseudoSelector
    &::-webkit-contacts-auto-fill-button,
    &::-webkit-caps-lock-indicator,
    &::-webkit-credentials-auto-fill-button {
      visibility: hidden;
    }

    // Fixes an issue on iOS where the following input types will collapse to 1px,
    // if they're empty, because we've overridden their background color.
    // See: https://stackoverflow.com/questions/18381594/input-type-date-appearance-in-safari-on-ios
    &[type='date'],
    &[type='datetime'],
    &[type='datetime-local'],
    &[type='month'],
    &[type='week'],
    &[type='time'] {
      &::after {
        content: ' ';
        white-space: pre;
        width: 1px;
      }
    }

    // Prevents IE from always adding a scrollbar by default.
    &textarea {
      $textarea-padding-negation: -2px 0;
      $textarea-padding-for-scrollbars: 2px 0;
      // Negative margin to negate the effect of the padding on the layout.
      margin: $textarea-padding-negation;
      // Only allow resizing along the Y axis.
      overflow: auto;
      // The 2px padding prevents scrollbars from appearing on Chrome even when they aren't needed.
      padding: $textarea-padding-for-scrollbars;
      resize: vertical;

      &.cdk-textarea-autosize {
        resize: none;
      }
    }
  }

  // Icon to clear the value of the input
  .c-input__clear {
    color: var(--ts-input-clear-color);
    cursor: pointer;
    display: block;
    height: var(--ts-input-clear-size);
    opacity: 0;
    pointer-events: none;
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    transition:
      opacity var(--ts-animation-time-duration-200) var(--ts-animation-easing-ease),
      color var(--ts-animation-time-duration-200) var(--ts-animation-easing-ease);
    width: var(--ts-input-clear-size);

    &--visible {
      opacity: 1;
      pointer-events: auto;
    }

    &:focus,
    &:hover {
      --ts-input-clear-color: var(--ts-input-clear-color-hover);
    }

    svg {
      height: 100%;
      width: 100%;
    }
  }

  .ts-input__messages {
    font: var(--ts-input-hint-typography);

    .ts-input__hint {
      text-align: right;
    }

    .ts-input__error {
      color: var(--ts-input-error-color);
    }
  }

  // Update the datepicker toggle positioning when inside the input
  .mat-datepicker-toggle {
    display: inline-block;
    position: absolute;
    right: 4px;
    top: 50%;
    transform: translateY(-50%);

    .mat-datepicker-toggle-default-icon {
      vertical-align: baseline;
    }

    // This is the button used to trigger the datepicker
    .mat-button-wrapper {
      align-items: center;
      display: flex;
      justify-content: center;
    }
  }
}

// Scope to target the datepicker overlay
.cdk-overlay-container {
  .mat-datepicker-popup {
    z-index: z(attached-panel-overlay);
  }
}
